Kernel Time measurement
==============================

1. Kernel programs "Programmable interval timer chip" of the platform to 
   generate HZ no of interrupts per second.
   (HZ is a kernel parameter whose default value is 100 for most architectures)

2. On each timer interrupt, kernel increments a global counter(unsigned 64 bit)   'jiffies' by 1.(Each incrementation of jiffie counter is called "kernel 
    tick" and its frequency depends on HZ parameter) 

3. On SMP/Multicore systems primary CPU(cpu/0) timer is used for couting 
   jiffie ticks
	- CPU/0 timer is default system timer.

4. Kernel functions can access 'jiffies' as read only counter.

5 All time-based operations in kernel are carried out on the basis of jiffies 
  stamp
	ex: 
	1. process scheduling
	2. Execution of periodic/single-shot Timer routines
	3. Bounded wait calls
	4. network protocol state machines(TCP, SCTP,...)
	5. All Other time related operations

6. All kernel functions must treat jiffies as current time.

7. Kernel header file <linux/time.h> provides functions to convert 
   jiffies stamp into user representation formats and vice-versa. 
   (struct timeval, struct timespec)
